using Capgemini.Inventory.BusinessLayer;
using Inventory.Entities;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Http;
using System.Threading.Tasks;
using Inventory.MVC.Models;
using System.Web.Http.Description;

namespace Inventory.MVC.ApiControllers
{
    public class SuppliersController : ApiController
    {
        private Supplier supplier;
       
        private SupplierBL supplierBL;
        
       

        public SuppliersController()
        {
            supplierBL = new SupplierBL();
            supplier = new Supplier();
        }

        //      api/suppliers
        [HttpGet]
        public async Task<List<SupplierViewModel>> GetAllSuppliersBL()
        {
            List<SupplierViewModel> suppliersVM = new List<SupplierViewModel>();
            List<Supplier> suppliers = await supplierBL.GetAllSuppliersBL();
            foreach (var item in suppliers)
            {
                SupplierViewModel supplierVM = new SupplierViewModel() { SupplierID = item.SupplierID, SupplierName = item.SupplierName, Email = item.Email, SupplierMobile = item.SupplierMobile, CreationDateTime = item.CreationDateTime, LastModifiedDateTime = item.LastModifiedDateTime };
                suppliersVM.Add(supplierVM);
            }


            return suppliersVM;
        }

        //api/suppliers
        [HttpPost]
        public async Task<IHttpActionResult> PostSuppliers(Supplier supplier)
        {
            bool supplierAdded = false;
            Guid id = default(Guid);
            (supplierAdded, id) = await supplierBL.AddSupplierBL(supplier);
            return Ok();
        }

        [HttpDelete]
        public async Task<bool> DeleteSupplier(Guid id)
        {
            return await supplierBL.DeleteSupplierBL(id);
        }



    }
}
